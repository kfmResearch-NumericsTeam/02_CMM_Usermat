! ----------------------------------------------------------------------------
! ----------------------------------------------------------------------------
! 09.2    NONLINEAR DATA EXTRACTION
! ----------------------------------------------------------------------------
! ----------------------------------------------------------------------------
! Purpose:  Extract the Results to .txt-files of a GIVEN load and substep number

!-------------------------------------------------------------------------------
! 1.    GENERAL 
!-------------------------------------------------------------------------------

/POST1                              ! Enter postprocessor

! 1.1   Preliminary settings 
!-------------------------------------------------------------------------------

! Information
! - Each chapter can be treated/activated separately. They are not dependent.
! - All chapters do the data extractions in a loop for each part

! 1.1.2 Set level for which extraction is happening
!--------------------------------------------------
n_L = 4
*DIM,Level,CHAR,n_L
Level(1) = 'D'
Level(2) = 'P'
Level(3) = 'F'
Level(4) = 'L'

!
! 1.1.4 Set the tension level of current analysis
!------------------------------------------------
n_T = 3
*DIM,Tension,CHAR,n_L
Tension(1) = '0'
Tension(2) = '1'
Tension(3) = 'T'

*IF,kRiss_P,GT,0.9,THEN
    ten = 2
*ELSEIF,kRiss_P,LT,0.15,THEN
    ten = 1
*ELSE
    ten = 3
*ENDIF
!
! 1.2   Definition of the parts
!-------------------------------------------------------------------------------

! Definition of the three parts (=new components) for which solution data will be
! extracted. 

n_P = 4
*DIM,Part,CHAR,n_P
*DIM,Partname,CHAR,n_P
allsel
! 1.2.1 Platte
!-------------
Part(1) = 'Platte'
Partname(1) = 'Platte'
esel,s,cent,z,0
CM,Platte,ELEM
ESEL,ALL
allsel

! 1.2.2 Lange Wand
!-----------------
Part(2) = 'LW'
Partname(2) = 'LW'
esel,s,cent,z,-1065,-1000000
esel,u,cent,y,1,1000000
CM,LW,ELEM
ESEL,ALL
allsel

! 1.2.3 Kurze Wand
!--------------------
Part(3) = 'KW'
Partname(3) = 'KW'
esel,s,cent,z,-1065,-1000000
esel,u,cent,y,1,-1000000
CM,KW,ELEM
ESEL,ALL
allsel

! 1.2.4 Brüstung
!--------------------
Part(4) = 'BR'
Partname(4) = 'BR'
esel,s,cent,z,0.1,1000000
CM,BR,ELEM
ESEL,ALL
allsel
!
! Seetings (only for description for the output)
n_P=1
lvl=1  ! Set level
!
!-------------------------------------------------------------------------------
! 2.    NODE COORDINATES AND ELEMENTS  
!-------------------------------------------------------------------------------

! Extract the coordinates of each node AND the nodes correspond. to the elements
allsel
*DO,prt,1,n_P

    ! 2.1 Coordinates of the nodes '..._coor_nodes.txt'
    !---------------------------------------------------------------------------
    NSEL,ALL
    ALLSEL
    ESEL,S,,,Part(prt)
    NSLE,ALL                            ! Nodes attaches to those elements 
    *GET,NrN,NODE,0,COUNT               ! NrN: Number of nodes in the list
    *DIM,N_N,ARRAY,NrN,1
    *VGET,N_N,NODE, ,NLIST              ! N_N: Node list array
    !ALLSEL
       
    *DIM,coor_nodes,ARRAY,NrN,4
    *DO,ii,1,NrN
      coor_nodes(ii,1) = N_N(ii)                ! 1. node number
      *GET,coor_nodes(ii,2),NODE,N_N(ii),LOC,X  ! 2. x-coor of node
      *GET,coor_nodes(ii,3),NODE,N_N(ii),LOC,Y  ! 3. y-coor of node
      *GET,coor_nodes(ii,4),NODE,N_N(ii),LOC,Z  ! 4. z-coor of node     
    *ENDDO

    ! 2.2 Node numbers per element '..._elem_nodes.txt'
    !---------------------------------------------------------------------------
    NSEL,ALL
    ALLSEL
    ESEL,S,,,Part(prt)
    NSLE,ALL
    *GET,NrE,ELEM,0,COUNT               ! NrE: Number of elements in the list
    *DIM,N_E,ARRAY,NrE,1
    *VGET,N_E,ELEM, ,ELIST              ! N_E: Element list array
    !ALLSEL
    
    *DIM,elem_nodes,ARRAY,NrE,5
    *DO,ii,1,NrE
        elem_nodes(ii,1) = N_E(ii)                 ! 1. element number
        *GET,elem_nodes(ii,2),ELEM,N_E(ii),NODE,1  ! 2. node number 1
        *GET,elem_nodes(ii,3),ELEM,N_E(ii),NODE,2  ! 3. node number 2
        *GET,elem_nodes(ii,4),ELEM,N_E(ii),NODE,3  ! 4. node number 3
        *GET,elem_nodes(ii,5),ELEM,N_E(ii),NODE,4  ! 5. node number 4
    *ENDDO

    *DEL,NrN,,NOPR
    *DEL,N_N,,NOPR
    *DEL,NrE,,NOPR
    *DEL,N_E,,NOPR
 
 
    ! 2.1MACRO coor_nodes - [LVL][TEN][PRT]_coor_nodes.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_nodes'
    Arg2 = 'f20.5'
    Arg3 = 4
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_nodes.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'
                                     
                                     
    ! 2.2MACRO elem_nodes - [LVL][TEN][PRT]_elem_nodes.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'elem_nodes'
    Arg2 = 'f20.5'
    Arg3 = 5
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_elem_nodes.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac' 

    *DEL,coor_nodes,,NOPR
    *DEL,elem_nodes,,NOPR

*ENDDO




!-------------------------------------------------------------------------------
! 3.    MVN-Results  
!-------------------------------------------------------------------------------

! Extract moments, shear forces and membrane forces of each element
allsel
*DO,prt,1,n_P

    NSEL,ALL
    ALLSEL
    ESEL,S,,,Part(prt)    
    NSLE,ALL                            ! Nodes attached to those elements
    *GET,NrE,ELEM,0,COUNT               ! NrE: Number of elements in the list
    *DIM,N_E,ARRAY,NrE,1
    *VGET,N_E,ELEM, ,ELIST              ! N_E: Element list array
    !ALLSEL
    ETAB,ERASE
    
    *DIM,mvn,ARRAY,NrE,13
    *DO,ii,1,NrE
      mvn(ii,1) = N_E(ii)                       ! 1. element number
      ETABLE,MX,SMISC,4                 
      *GET,mvn(ii,2),ETAB,1,ELEM,N_E(ii)        ! 2. mx
      ETABLE,MY,SMISC,5                       
      *GET,mvn(ii,3),ETAB,2,ELEM,N_E(ii)        ! 3. my
      ETABLE,MXY,SMISC,6                       
      *GET,mvn(ii,4),ETAB,3,ELEM,N_E(ii)        ! 4. mxy
      ETABLE,VX,SMISC,7                
      *GET,mvn(ii,5),ETAB,4,ELEM,N_E(ii)        ! 5. vx
      ETABLE,VY,SMISC,8
      *GET,mvn(ii,6),ETAB,5,ELEM,N_E(ii)        ! 6. vy      
      mvn(ii,7)=SQRT(mvn(ii,5)**2+mvn(ii,6)**2) ! 7. v0 (why not already calculate it here...) 
      ETABLE,NX,SMISC,1                 
      *GET,mvn(ii,8),ETAB,6,ELEM,N_E(ii)        ! 8. nx
      ETABLE,NY,SMISC,2
      *GET,mvn(ii,9),ETAB,7,ELEM,N_E(ii)        ! 9. ny
      ETABLE,NXY,SMISC,3
      *GET,mvn(ii,10),ETAB,8,ELEM,N_E(ii)       ! 10. nxy    

      *GET,mvn(ii,11),ELEM,N_E(ii),CENT,X       ! 11. x-coor
      *GET,mvn(ii,12),ELEM,N_E(ii),CENT,Y       ! 12. y-coor
      *GET,mvn(ii,13),ELEM,N_E(ii),CENT,Z       ! 13. z-coor

      
    *ENDDO

    *DEL,NrN,,NOPR
    *DEL,N_N,,NOPR
    *DEL,NrE,,NOPR
    *DEL,N_E,,NOPR 
      
 
    ! 3MACRO mvn - [LVL][TEN][PRT]_mvn.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'mvn'
    Arg2 = 'f20.5'
    Arg3 = 13
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_mvn.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'

    *DEL,mvn,,NOPR

*ENDDO   



!-------------------------------------------------------------------------------
! 4.    DISPLACEMENTS
!-------------------------------------------------------------------------------   

! Extract nodal displacements and rotations in x, y and z direction
allsel   
*DO,prt,1,n_P    

    NSEL,ALL
    ALLSEL
    ESEL,S,,,Part(prt)
    NSLE,ALL                            ! Nodes attaches to those elements
    *GET,NrN,NODE,0,COUNT               ! NrN: Number of nodes in the list
    *DIM,N_N,ARRAY,NrN,1
    *VGET,N_N,NODE, ,NLIST              ! N_N: Node list array
    !ALLSEL   
   
    *DIM,defor_rot,ARRAY,NrN,7
    *DO,ii,1,NrN
      defor_rot(ii,1) = N_N(ii)                  ! 1. node number
      *GET,defor_rot(ii,2),NODE,N_N(ii),U,X      ! 2. displ in x
      *GET,defor_rot(ii,3),NODE,N_N(ii),U,Y      ! 3. displ in y
      *GET,defor_rot(ii,4),NODE,N_N(ii),U,Z      ! 4. displ in z
      *GET,defor_rot(ii,5),NODE,N_N(ii),ROT,X    ! 5. rotat in x
      *GET,defor_rot(ii,6),NODE,N_N(ii),ROT,Y    ! 6. rotat in y
      *GET,defor_rot(ii,7),NODE,N_N(ii),ROT,Z    ! 7. rotat in z
    *ENDDO
    
    *DEL,NrN,,NOPR
    *DEL,N_N,,NOPR

    ! 4MACRO defor_rot - [LVL][TEN][PRT]_defor_rot.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'defor_rot'
    Arg2 = 'f20.5'
    Arg3 = 7
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_defor_rot.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'

    *DEL,defor_rot,,NOPR

*ENDDO
allsel

!-------------------------------------------------------------------------------
! CASE DISTINCTION
! Exit extraction if the simulation was linear elastic
*IF,nlfe,EQ,0,THEN
    /EOF
*ENDIF 
*IF,Level(lvl),EQ,'L',THEN
    /EOF
*ENDIF
!
!-------------------------------------------------------------------------------
! 5.    STEEL STRESSES AT THE CRACKS 
!-------------------------------------------------------------------------------   

! Extract steel stresses at the cracks for each of the four reinforcement layers
allsel  
n_P=1 ! Ab hier nur noch Platte auswerten 
*DO,prt,1,n_P

    !NSEL,ALL
    !ALLSEL
    ESEL,S,,,Part(prt)
    NSLE,ALL       
    *GET,NrE,ELEM,0,COUNT               ! NrE: Number of elements in the list
    *DIM,N_E,ARRAY,NrE,1
    *VGET,N_E,ELEM, ,ELIST              ! N_E: Element list array
    !ALLSEL
    
    *DIM,sig_sr,ARRAY,4*NrE,8
    *DIM,coor_layer_bot_x,ARRAY,4*NrE,3
    *DIM,coor_layer_bot_y,ARRAY,4*NrE,3
    *DIM,coor_layer_top_y,ARRAY,4*NrE,3
    *DIM,coor_layer_top_x,ARRAY,4*NrE,3

    ! Auxiliary files
    *DIM,auxiliary,ARRAY,4*NrE,12
    
    aux = 0                                
    *DO,ii,1,NrE
        ESEL,S,ELEM, ,N_E(ii)
        NSLE,ALL
        *GET,NrN,NODE,0,COUNT               ! NrN: Number of nodes in the list
        *DIM,N_N,ARRAY,NrN,1
        *VGET,N_N,NODE, ,NLIST              ! N_N: Node list array
        
        *DO,kk,1,NrN
            aux = aux+1
            *GET,layer_bot_y,NODE,N_N(kk),SVAR,58      ! Extract layer nr of RC layer
            *GET,layer_bot_x,NODE,N_N(kk),SVAR,59
            *GET,layer_top_x,NODE,N_N(kk),SVAR,60
            *GET,layer_top_y,NODE,N_N(kk),SVAR,61
            
            LAYER,layer_bot_x                                  ! Extract for selected layer nr            
            *GET,sig_sr(aux,1),NODE,N_N(kk),SVAR,21            ! sig_sr 'druckfeld' (cmm)
            *GET,sig_sr(aux,2),NODE,N_N(kk),SVAR,41            ! sig_sr 'zug'       (tcm)             
            *GET,coor_layer_bot_x(aux,1),NODE,N_N(kk),SVAR,63  ! Layer coor in x
            *GET,coor_layer_bot_x(aux,2),NODE,N_N(kk),SVAR,64  ! Layer coor in y
            *GET,coor_layer_bot_x(aux,3),NODE,N_N(kk),SVAR,65  ! Layer coor in z
            *GET,auxiliary(aux,1),NODE,N_N(kk),SVAR,1          ! mech. Modell 
            *GET,auxiliary(aux,2),NODE,N_N(kk),SVAR,3          ! Check Bewe. Fliessen/Gerissen 'druckfeld'
            *GET,auxiliary(aux,3),NODE,N_N(kk),SVAR,4          ! Check Bewe. Fliessen/Gerissen 'zug'
            
            LAYER,layer_bot_y                                  ! Extract for selected layer nr
            *GET,sig_sr(aux,3),NODE,N_N(kk),SVAR,20            ! sig_sr 'druckfeld' (cmm)
            *GET,sig_sr(aux,4),NODE,N_N(kk),SVAR,40            ! sig_sr 'zug'       (tcm)
            *GET,coor_layer_bot_y(aux,1),NODE,N_N(kk),SVAR,63  ! Layer coor in x
            *GET,coor_layer_bot_y(aux,2),NODE,N_N(kk),SVAR,64  ! Layer coor in y
            *GET,coor_layer_bot_y(aux,3),NODE,N_N(kk),SVAR,65  ! Layer coor in z
            *GET,auxiliary(aux,4),NODE,N_N(kk),SVAR,1          ! mech. Modell
            *GET,auxiliary(aux,5),NODE,N_N(kk),SVAR,3          ! Check Bewe. Fliessen/Gerissen 'druckfeld'
            *GET,auxiliary(aux,6),NODE,N_N(kk),SVAR,4          ! Check Bewe. Fliessen/Gerissen 'zug'            
            
            LAYER,layer_top_y                                  ! Extract for selected layer nr
            *GET,sig_sr(aux,5),NODE,N_N(kk),SVAR,20            ! sig_sr 'druckfeld' (cmm)
            *GET,sig_sr(aux,6),NODE,N_N(kk),SVAR,40            ! sig_sr 'zug'       (tcm)
            *GET,coor_layer_top_y(aux,1),NODE,N_N(kk),SVAR,63  ! Layer coor in x
            *GET,coor_layer_top_y(aux,2),NODE,N_N(kk),SVAR,64  ! Layer coor in y
            *GET,coor_layer_top_y(aux,3),NODE,N_N(kk),SVAR,65  ! Layer coor in z 
            *GET,auxiliary(aux,7),NODE,N_N(kk),SVAR,1          ! mech. Modell 
            *GET,auxiliary(aux,8),NODE,N_N(kk),SVAR,3          ! Check Bewe. Fliessen/Gerissen 'druckfeld'
            *GET,auxiliary(aux,9),NODE,N_N(kk),SVAR,4          ! Check Bewe. Fliessen/Gerissen 'zug'            

            LAYER,layer_top_x                                  ! Extract for selected layer nr
            *GET,sig_sr(aux,7),NODE,N_N(kk),SVAR,21            ! sig_sr 'druckfeld' (cmm)
            *GET,sig_sr(aux,8),NODE,N_N(kk),SVAR,41            ! sig_sr 'zug'       (tcm)
            *GET,coor_layer_top_x(aux,1),NODE,N_N(kk),SVAR,63  ! Layer coor in x
            *GET,coor_layer_top_x(aux,2),NODE,N_N(kk),SVAR,64  ! Layer coor in y
            *GET,coor_layer_top_x(aux,3),NODE,N_N(kk),SVAR,65  ! Layer coor in z
            *GET,auxiliary(aux,10),NODE,N_N(kk),SVAR,1          ! mech. Modell
            *GET,auxiliary(aux,11),NODE,N_N(kk),SVAR,3          ! Check Bewe. Fliessen/Gerissen 'druckfeld'
            *GET,auxiliary(aux,12),NODE,N_N(kk),SVAR,4          ! Check Bewe. Fliessen/Gerissen 'zug'
            
        *ENDDO
        *DEL,N_N,,NOPR
        *DEL,NrN,,NOPR        
    *ENDDO
     
    *DEL,NrE,,NOPR
    *DEL,N_E,,NOPR
    
    ! 5.1MACRO auxiliary - [LVL][TEN][PRT]_auxiliary.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'auxiliary'
    Arg2 = 'f20.5'
    Arg3 = 10
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_auxiliary.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'

    ! 5.1MACRO sig_sr - [LVL][TEN][PRT]_sig_sr.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'sig_sr'
    Arg2 = 'f20.5'
    Arg3 = 8
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_sig_sr.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'


    ! 5.2MACRO coor_layer_bot_x - [LVL][TEN][PRT]_coor_layer_bot_x.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_layer_bot_x'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_layer_bot_x.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'


    ! 5.3MACRO coor_layer_bot_y - [LVL][TEN][PRT]_coor_layer_bot_y.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_layer_bot_y'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_layer_bot_y.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'


    ! 5.4MACRO coor_layer_top_y - [LVL][TEN][PRT]_coor_layer_top_y.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_layer_top_y'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_layer_top_y.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'


    ! 5.5MACRO coor_layer_top_x - [LVL][TEN][PRT]_coor_layer_top_x.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_layer_top_x'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_layer_top_x.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'

    *DEL,sig_sr,,NOPR
    *DEL,coor_layer_bot_x,,NOPR
    *DEL,coor_layer_bot_y,,NOPR
    *DEL,coor_layer_top_y,,NOPR
    *DEL,coor_layer_top_x,,NOPR

*ENDDO
!
!-------------------------------------------------------------------------------
! 6.    CONCRETE STRESSES
!-------------------------------------------------------------------------------

! Extract the concrete stresses at the top, middle and bottom layer, also the 
! crack direction and compressive strength (the principal stresses can be 
! calculated in matlab using the concrete stresses)
allsel
*DO,prt,1,n_P    

    NSEL,ALL
    ALLSEL
    ESEL,S,,,Part(prt)
    NSLE,ALL       
    *GET,NrE,ELEM,0,COUNT               ! NrE: Number of elements in the list
    *DIM,N_E,ARRAY,NrE,1
    *VGET,N_E,ELEM, ,ELIST              ! N_E: Element list array
    !ALLSEL
    
    *DIM,sig_c,ARRAY,4*NrE,12
    *DIM,coor_intp_toplayer,ARRAY,4*NrE,3
    *DIM,coor_intp_midlayer,ARRAY,4*NrE,3
    *DIM,coor_intp_botlayer,ARRAY,4*NrE,3    

    botlayernr = 1
    midlayernr = 15  ! -> Achtung sind hier nicht brauchbar (Voute!)
    toplayernr = 30
    
    aux = 0                                
    *DO,ii,1,NrE
        ESEL,S,ELEM, ,N_E(ii)
        NSLE,ALL
        *GET,NrN,NODE,0,COUNT               ! NrN: Number of nodes in the list
        *DIM,N_N,ARRAY,NrN,1
        *VGET,N_N,NODE, ,NLIST              ! N_N: Node list array
        
        *DO,kk,1,NrN
            aux = aux+1
            
            LAYER,toplayernr                            
            *GET,usedmodel,NODE,N_N(kk),SVAR,1               ! which model was used? 
            sig_c(aux,1)=usedmodel
            *IF,usedmodel,EQ,1,THEN                          ! druck-druck = druck
                *GET,sig_c(aux,2),NODE,N_N(kk),SVAR,8           ! sig_c1
                *GET,sig_c(aux,3),NODE,N_N(kk),SVAR,9           ! sig_c3
                *GET,sig_c(aux,4),NODE,N_N(kk),SVAR,12          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,2,THEN                      ! zug-druck = druckzug
                *GET,sig_c(aux,2),NODE,N_N(kk),SVAR,29          ! sig_c1
                *GET,sig_c(aux,3),NODE,N_N(kk),SVAR,30          ! sig_c3
                *GET,sig_c(aux,4),NODE,N_N(kk),SVAR,33          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,3,THEN                      ! linear elastisch = verschmierte spannungen
                *GET,sig_x,NODE,N_N(kk),SVAR,66                 ! sig_x
                *GET,sig_y,NODE,N_N(kk),SVAR,67                 ! sig_y
                *GET,sig_xy,NODE,N_N(kk),SVAR,68                ! tau_xy                
                sig_c(aux,2)=(sig_x+sig_y)/2+SQRT((1/2)*((sig_x+sig_y)*(sig_x+sig_y)+(2*sig_xy)*(2*sig_xy)))     ! sig_c1
                sig_c(aux,3)=(sig_x+sig_y)/2-SQRT((1/2)*((sig_x+sig_y)*(sig_x+sig_y)+(2*sig_xy)*(2*sig_xy)))     ! sig_c3
                sig_c(aux,4)=f_c                              ! fc
            *ELSEIF,usedmodel,EQ,4,THEN                      ! cmm = druckfeld
                sig_c(aux,2)=0                                  ! sig_c1
                *GET,sig_c(aux,3),NODE,N_N(kk),SVAR,18          ! sig_c3
                *GET,sig_c(aux,4),NODE,N_N(kk),SVAR,19          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,5,THEN                      ! zug-zug =  zug
                *GET,sig_c(aux,2),NODE,N_N(kk),SVAR,39          ! sig_c1
                sig_c(aux,3)=0                                  ! sig_c3
                sig_c(aux,4)=f_c                                ! fc
            *ENDIF
            *GET,coor_intp_toplayer(aux,1),NODE,N_N(kk),SVAR,63 ! Layer coor in x            
            *GET,coor_intp_toplayer(aux,2),NODE,N_N(kk),SVAR,64 ! Layer coor in y  
            *GET,coor_intp_toplayer(aux,3),NODE,N_N(kk),SVAR,65 ! Layer coor in z  
            
            LAYER,midlayernr                            
            *GET,usedmodel,NODE,N_N(kk),SVAR,1               ! which model was used?
            sig_c(aux,5)=usedmodel
            *IF,usedmodel,EQ,1,THEN                          ! druck-druck = druck
                *GET,sig_c(aux,6),NODE,N_N(kk),SVAR,8           ! sig_c1
                *GET,sig_c(aux,7),NODE,N_N(kk),SVAR,9           ! sig_c3
                *GET,sig_c(aux,8),NODE,N_N(kk),SVAR,12          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,2,THEN                      ! zug-druck = druckzug
                *GET,sig_c(aux,6),NODE,N_N(kk),SVAR,29          ! sig_c1
                *GET,sig_c(aux,7),NODE,N_N(kk),SVAR,30          ! sig_c3
                *GET,sig_c(aux,8),NODE,N_N(kk),SVAR,33          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,3,THEN                      ! linear elastisch = verschmierte spannungen
                *GET,sig_x,NODE,N_N(kk),SVAR,66                 ! sig_x
                *GET,sig_y,NODE,N_N(kk),SVAR,67                 ! sig_y
                *GET,sig_xy,NODE,N_N(kk),SVAR,68                ! tau_xy                
                sig_c(aux,6)=(sig_x+sig_y)/2+SQRT((1/2)*((sig_x+sig_y)*(sig_x+sig_y)+(2*sig_xy)*(2*sig_xy)))     ! sig_c1
                sig_c(aux,7)=(sig_x+sig_y)/2-SQRT((1/2)*((sig_x+sig_y)*(sig_x+sig_y)+(2*sig_xy)*(2*sig_xy)))     ! sig_c3
                sig_c(aux,8)=f_c                              ! fc(eps1)
            *ELSEIF,usedmodel,EQ,4,THEN                      ! cmm = druckfeld
                sig_c(aux,6)=0                                  ! sig_c1
                *GET,sig_c(aux,7),NODE,N_N(kk),SVAR,18          ! sig_c3
                *GET,sig_c(aux,8),NODE,N_N(kk),SVAR,19          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,5,THEN                      ! zug-zug =  zug
                *GET,sig_c(aux,6),NODE,N_N(kk),SVAR,39          ! sig_c1
                sig_c(aux,7)=0                                  ! sig_c3
                sig_c(aux,8)=f_c                              ! fc(eps1)
            *ENDIF
            *GET,coor_intp_midlayer(aux,1),NODE,N_N(kk),SVAR,63 ! Layer coor in x            
            *GET,coor_intp_midlayer(aux,2),NODE,N_N(kk),SVAR,64 ! Layer coor in y  
            *GET,coor_intp_midlayer(aux,3),NODE,N_N(kk),SVAR,65 ! Layer coor in z  

            LAYER,botlayernr                            
            *GET,usedmodel,NODE,N_N(kk),SVAR,1               ! which model was used?
            sig_c(aux,9)=usedmodel
            *IF,usedmodel,EQ,1,THEN                          ! druck-druck = druck
                *GET,sig_c(aux,10),NODE,N_N(kk),SVAR,8           ! sig_c1
                *GET,sig_c(aux,11),NODE,N_N(kk),SVAR,9           ! sig_c3
                *GET,sig_c(aux,12),NODE,N_N(kk),SVAR,12          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,2,THEN                      ! zug-druck = druckzug
                *GET,sig_c(aux,10),NODE,N_N(kk),SVAR,29          ! sig_c1
                *GET,sig_c(aux,11),NODE,N_N(kk),SVAR,30          ! sig_c3
                *GET,sig_c(aux,12),NODE,N_N(kk),SVAR,33          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,3,THEN                      ! linear elastisch = verschmierte spannungen
                *GET,sig_x,NODE,N_N(kk),SVAR,66                 ! sig_x
                *GET,sig_y,NODE,N_N(kk),SVAR,67                 ! sig_y
                *GET,sig_xy,NODE,N_N(kk),SVAR,68                ! tau_xy                
                sig_c(aux,10)=(sig_x+sig_y)/2+SQRT((1/2)*((sig_x+sig_y)*(sig_x+sig_y)+(2*sig_xy)*(2*sig_xy)))     ! sig_c1
                sig_c(aux,11)=(sig_x+sig_y)/2-SQRT((1/2)*((sig_x+sig_y)*(sig_x+sig_y)+(2*sig_xy)*(2*sig_xy)))     ! sig_c3
                sig_c(aux,12)=f_c                              ! fc(eps1)
            *ELSEIF,usedmodel,EQ,4,THEN                      ! cmm = druckfeld
                sig_c(aux,10)=0                                  ! sig_c1
                *GET,sig_c(aux,11),NODE,N_N(kk),SVAR,18          ! sig_c3
                *GET,sig_c(aux,12),NODE,N_N(kk),SVAR,19          ! fc(eps1)
            *ELSEIF,usedmodel,EQ,5,THEN                      ! zug-zug =  zug
                *GET,sig_c(aux,10),NODE,N_N(kk),SVAR,39          ! sig_c1
                sig_c(aux,11)=0                                  ! sig_c3
                sig_c(aux,12)=f_c                              ! fc(eps1)
            *ENDIF
            *GET,coor_intp_botlayer(aux,1),NODE,N_N(kk),SVAR,63 ! Layer coor in x            
            *GET,coor_intp_botlayer(aux,2),NODE,N_N(kk),SVAR,64 ! Layer coor in y  
            *GET,coor_intp_botlayer(aux,3),NODE,N_N(kk),SVAR,65 ! Layer coor in z 
        *ENDDO
        *DEL,N_N,,NOPR
        *DEL,NrN,,NOPR
        !ALLSEL
    *ENDDO
     
    *DEL,NrE,,NOPR
    *DEL,N_E,,NOPR


    ! 6.1MACRO sig_c - [LVL][TEN][PRT]_sig_c.txt
    ! -------------------------------------------------------------
    
    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'sig_c'
    Arg2 = 'f20.5'
    Arg3 = 12
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_sig_c.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'    
    
    
    ! 6.2MACRO coor_intp_toplayer - [LVL][TEN][PRT]_coor_intp_toplayer.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_intp_toplayer'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_intp_toplayer.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'


    ! 6.3MACRO coor_intp_midlayer - [LVL][TEN][PRT]_coor_intp_midlayer.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_intp_midlayer'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_intp_midlayer.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'


    ! 6.4MACRO coor_intp_botlayer - [LVL][TEN][PRT]_coor_intp_botlayer.txt
    ! -------------------------------------------------------------

    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'coor_intp_botlayer'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_coor_intp_botlayer.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'

    *DEL,sig_c,,NOPR
    *DEL,coor_intp_toplayer,,NOPR
    *DEL,coor_intp_midlayer,,NOPR
    *DEL,coor_intp_botlayer,,NOPR

*ENDDO



!-------------------------------------------------------------------------------
! 7.    PRINCIPAL STRAINS
!-------------------------------------------------------------------------------

! Extract the strains and the fictitious crack directions for the top, middle 
! and bottom layer ('normal' and principal strains)
allsel
*DO,prt,1,n_P    

    NSEL,ALL
    ALLSEL
    ESEL,S,,,Part(prt)
    NSLE,ALL       
    *GET,NrE,ELEM,0,COUNT               ! NrE: Number of elements in the list
    *DIM,N_E,ARRAY,NrE,1
    *VGET,N_E,ELEM, ,ELIST              ! N_E: Element list array
    !ALLSEL
    
    *DIM,eps_princ,ARRAY,4*NrE,18
    !*DIM,coor_intp_toplayer,ARRAY,4*NrE,3    => already extracted in chapter 
    !*DIM,coor_intp_midlayer,ARRAY,4*NrE,3       above, reactivate if needed
    !*DIM,coor_intp_botlayer,ARRAY,4*NrE,3    

            
    botlayernr = 1
    midlayernr = 15   
    toplayernr = 30
    
    aux = 0                                
    *DO,ii,1,NrE
        ESEL,S,ELEM, ,N_E(ii)
        NSLE,ALL
        *GET,NrN,NODE,0,COUNT               ! NrN: Number of nodes in the list
        *DIM,N_N,ARRAY,NrN,1
        *VGET,N_N,NODE, ,NLIST              ! N_N: Node list array
        
        *DO,kk,1,NrN
            aux = aux+1
            
            LAYER,toplayernr                            
            *GET,eps_princ(aux,1),NODE,N_N(kk),SVAR,69          ! eps_x
            *GET,eps_princ(aux,2),NODE,N_N(kk),SVAR,70          ! eps_y
            *GET,eps_princ(aux,3),NODE,N_N(kk),SVAR,71          ! eps_xy
            *GET,eps_princ(aux,4),NODE,N_N(kk),SVAR,7           ! theta_crack
            *GET,eps_princ(aux,5),NODE,N_N(kk),SVAR,5           ! eps_1
            *GET,eps_princ(aux,6),NODE,N_N(kk),SVAR,6           ! eps_3
            !*GET,coor_intp_toplayer(aux,1),NODE,N_N(kk),SVAR,63 ! Layer coor in x            
            !*GET,coor_intp_toplayer(aux,2),NODE,N_N(kk),SVAR,64 ! Layer coor in y  
            !*GET,coor_intp_toplayer(aux,3),NODE,N_N(kk),SVAR,65 ! Layer coor in z  
            
            LAYER,midlayernr                            
            *GET,eps_princ(aux,7),NODE,N_N(kk),SVAR,69          ! eps_x
            *GET,eps_princ(aux,8),NODE,N_N(kk),SVAR,70          ! eps_y
            *GET,eps_princ(aux,9),NODE,N_N(kk),SVAR,71          ! eps_xy
            *GET,eps_princ(aux,10),NODE,N_N(kk),SVAR,7          ! theta_crack
            *GET,eps_princ(aux,11),NODE,N_N(kk),SVAR,5          ! eps_1
            *GET,eps_princ(aux,12),NODE,N_N(kk),SVAR,6          ! eps_3
            !*GET,coor_intp_toplayer(aux,1),NODE,N_N(kk),SVAR,63 ! Layer coor in x            
            !*GET,coor_intp_toplayer(aux,2),NODE,N_N(kk),SVAR,64 ! Layer coor in y  
            !*GET,coor_intp_toplayer(aux,3),NODE,N_N(kk),SVAR,65 ! Layer coor in z  

            LAYER,botlayernr                            
            *GET,eps_princ(aux,13),NODE,N_N(kk),SVAR,69         ! eps_x
            *GET,eps_princ(aux,14),NODE,N_N(kk),SVAR,70         ! eps_y
            *GET,eps_princ(aux,15),NODE,N_N(kk),SVAR,71         ! eps_xy
            *GET,eps_princ(aux,16),NODE,N_N(kk),SVAR,7          ! theta_crack
            *GET,eps_princ(aux,17),NODE,N_N(kk),SVAR,5          ! eps_1
            *GET,eps_princ(aux,18),NODE,N_N(kk),SVAR,6          ! eps_3      
            !*GET,coor_intp_toplayer(aux,1),NODE,N_N(kk),SVAR,63 ! Layer coor in x            
            !*GET,coor_intp_toplayer(aux,2),NODE,N_N(kk),SVAR,64 ! Layer coor in y  
            !*GET,coor_intp_toplayer(aux,3),NODE,N_N(kk),SVAR,65 ! Layer coor in z 
        *ENDDO
        *DEL,N_N,,NOPR
        *DEL,NrN,,NOPR
        ALLSEL
    *ENDDO
     
    *DEL,NrE,,NOPR
    *DEL,N_E,,NOPR


    ! 7MACRO eps_princ - [LVL][TEN][PRT]_eps_princ.txt
    ! -------------------------------------------------------------
    
    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'eps_princ'
    Arg2 = 'f20.5'
    Arg3 = 21
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_eps_princ.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'    

    ! 6.2, 6.3 an 6.4 already defined in macros above

    *DEL,eps_princ,,NOPR

*ENDDO

!-------------------------------------------------------------------------------
! 8.    VALUES FOR SHEAR CHECK
!-------------------------------------------------------------------------------   

! Extract moments, shear forces and membrane forces of each element
allsel
*DO,prt,1,n_P

    NSEL,ALL
    ALLSEL
    ESEL,S,,,Part(prt)    
    NSLE,ALL                            ! Nodes attached to those elements
    
    ! Start shear check per element    
    *GET,NrE,ELEM,0,COUNT               
    *DIM,N_E,ARRAY,NrE,1
    *VGET,N_E,ELEM, ,ELIST              
    *DIM,vrd,ARRAY,NrE,3
    
    *DO,ii,1,NrE    

        ! Call shear strength Algo  
        ! ----------------------------------------------------------------------------    
        /Input,Pfad_shear_strength,inp,,0,0 
        ! ----------------------------------------------------------------------------
     

    ! Delete parameter    
    *DEL,NrN,,NOPR
    *DEL,N_N,,NOPR
    *DEL,evt,,NOPR
    *DEL,evb,,NOPR
    *DEL,e_v,,NOPR
    *DEL,coor_layer_1L,,NOPR
    *DEL,coor_layer_2L,,NOPR  
    *DEL,coor_layer_3L,,NOPR
    *DEL,coor_layer_4L,,NOPR
    *DEL,evt,,NOPR
    *DEL,evb,,NOPR
    *DEL,coor_layer_top,,NOPR
    *DEL,coor_layer_bot,,NOPR
          

*ENDDO
!
*DEL,NrE,,NOPR
*DEL,N_E,,NOPR 
allsel
    

    ! 7MACRO VSC - [LVL][TEN][PRT]_VSC.txt
    ! -------------------------------------------------------------
    
    ! Arg1 is the array name (string)
    ! Arg2 is the format descriptor (string)
    ! Arg3 is the number of columns to write (integer) 
    ! Arg4 is the file name and extention (string)

    Arg1 = 'vrd'
    Arg2 = 'f20.5'
    Arg3 = 3
    Arg4 = '%Level(lvl)%%Tension(ten)%%Part(prt)%_vrd.txt'

    ~eui,'set arrname [ans_getvalue PARM,Arg1,value]'
    ~eui,'set formatdescriptor [ans_getvalue PARM,Arg2,value]'
    ~eui,'set numcol [ans_getvalue PARM,Arg3,value]'
    ~eui,'set filename [ans_getvalue PARM,Arg4,value]'
    ! Trim up the strings a bit
    ~eui,'set arrname [string trim $arrname]'
    ~eui,'set formatdescriptor [string trim $formatdescriptor]'
    ~eui,'set filename [string trim $filename]' 
    ~eui,'set cmd "*mwrite,$arrname"'
    ~eui,'append cmd "(1,1),"'
    ~eui,'append cmd [file rootname $filename]'
    ! Put a comma between the filename and extension
    ~eui,'append cmd ","'
    ! Pull off the leading period from the extension. Leaving off the
    ! comma above and forgeting to strip off the leading period in the
    ! extension is a case of two errors canceling each other out. If 
    ! only life were always so kind...
    ~eui,'append cmd [string trimleft [file extension $filename] "."]'
    ~eui,'append cmd "\n"'
    ~eui,'append cmd "($numcol$formatdescriptor)"
    ~eui,'set fid [open mk_mwritehelper.mac w]'
    ~eui,'puts $fid $cmd'
    ~eui,'close $fid'
    ~eui,'ans_sendcommand mk_mwritehelper'
    ~eui,'file delete mk_mwritehelper.mac'    

    ! 6.2, 6.3 an 6.4 already defined in macros above

    *DEL,VSC,,NOPR

*ENDDO 